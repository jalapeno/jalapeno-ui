{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl } from '../config';\nconst api = axios.create({\n  baseURL: apiUrl\n});\nexport const fetchGraphs = async () => {\n  try {\n    // Update this endpoint based on your actual API\n    const response = await api.get('/graphs');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching graphs:', error);\n    throw error;\n  }\n};\nexport const fetchCollections = async () => {\n  try {\n    // Update this endpoint based on your actual API\n    const response = await api.get('/collections');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching collections:', error);\n    throw error;\n  }\n};\nexport const fetchTopologyData = async graphType => {\n  try {\n    // Update this endpoint based on your actual API\n    const response = await api.get(`/topology/${graphType}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching topology data:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","api","create","baseURL","fetchGraphs","response","get","data","error","console","fetchCollections","fetchTopologyData","graphType"],"sources":["/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { apiUrl } from '../config';\n\nconst api = axios.create({\n  baseURL: apiUrl\n});\n\nexport const fetchGraphs = async () => {\n  try {\n    // Update this endpoint based on your actual API\n    const response = await api.get('/graphs');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching graphs:', error);\n    throw error;\n  }\n};\n\nexport const fetchCollections = async () => {\n  try {\n    // Update this endpoint based on your actual API\n    const response = await api.get('/collections');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching collections:', error);\n    throw error;\n  }\n};\n\nexport const fetchTopologyData = async (graphType) => {\n  try {\n    // Update this endpoint based on your actual API\n    const response = await api.get(`/topology/${graphType}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching topology data:', error);\n    throw error;\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAElC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF;IACA,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAG,MAAOC,SAAS,IAAK;EACpD,IAAI;IACF;IACA,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAaM,SAAS,EAAE,CAAC;IACxD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}