{"ast":null,"code":"var _jsxFileName = \"/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Sidebar.css';\nimport { fetchCollections, fetchCollectionInfo } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onCollectionSelect\n}) => {\n  _s();\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadCollections = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchCollections(true);\n\n        // Extract collection names from the response\n        const collectionsArray = response.collections.map(col => ({\n          name: col.name,\n          type: col.type,\n          count: col.count\n        }));\n\n        // Filter to show only edge type collections for the graph\n        const graphCollections = collectionsArray.filter(col => col.type === 'edge');\n        setCollections(graphCollections);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load collections');\n        console.error('Error loading collections:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadCollections();\n  }, []);\n  const handleCollectionSelect = async collectionName => {\n    if (collectionName) {\n      setSelectedCollection(collectionName);\n      onCollectionSelect === null || onCollectionSelect === void 0 ? void 0 : onCollectionSelect(collectionName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Graph Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : collections.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sidebar-dropdown\",\n        value: selectedCollection,\n        onChange: e => handleCollectionSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a graph...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), collections.map(collection => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: collection.name,\n          children: [collection.name.replace(/_/g, ' '), \" (\", collection.count, \" edges)\"]\n        }, collection.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No graph collections available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"XK5aI99BopDEjonOWTZ7ZDFwRaU=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","fetchCollections","fetchCollectionInfo","jsxDEV","_jsxDEV","Sidebar","onCollectionSelect","_s","collections","setCollections","selectedCollection","setSelectedCollection","isLoading","setIsLoading","error","setError","loadCollections","response","collectionsArray","map","col","name","type","count","graphCollections","filter","err","console","handleCollectionSelect","collectionName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","onChange","e","target","collection","replace","_c","$RefreshReg$"],"sources":["/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Sidebar.css';\nimport { fetchCollections, fetchCollectionInfo } from '../services/api';\n\nconst Sidebar = ({ onCollectionSelect }) => {\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadCollections = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchCollections(true);\n        \n        // Extract collection names from the response\n        const collectionsArray = response.collections.map(col => ({\n          name: col.name,\n          type: col.type,\n          count: col.count\n        }));\n        \n        // Filter to show only edge type collections for the graph\n        const graphCollections = collectionsArray.filter(col => col.type === 'edge');\n        \n        setCollections(graphCollections);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load collections');\n        console.error('Error loading collections:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadCollections();\n  }, []);\n\n  const handleCollectionSelect = async (collectionName) => {\n    if (collectionName) {\n      setSelectedCollection(collectionName);\n      onCollectionSelect?.(collectionName);\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-section\">\n        <h3>Select Graph Type</h3>\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : collections.length > 0 ? (\n          <select \n            className=\"sidebar-dropdown\"\n            value={selectedCollection}\n            onChange={(e) => handleCollectionSelect(e.target.value)}\n          >\n            <option value=\"\">Select a graph...</option>\n            {collections.map((collection) => (\n              <option key={collection.name} value={collection.name}>\n                {collection.name.replace(/_/g, ' ')} ({collection.count} edges)\n              </option>\n            ))}\n          </select>\n        ) : (\n          <p>No graph collections available</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}