{"ast":null,"code":"var _jsxFileName = \"/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Sidebar.css';\nimport { fetchCollections } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onCollectionSelect,\n  onDataViewSelect\n}) => {\n  _s();\n  const [graphCollections, setGraphCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  const [selectedDataView, setSelectedDataView] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const dataViewOptions = [{\n    value: 'all',\n    label: 'All Data Collections'\n  }, {\n    value: 'true',\n    label: 'Graph Collections'\n  }, {\n    value: 'false',\n    label: 'Non-Graph Collections'\n  }];\n\n  // Fetch graph collections when component mounts\n  useEffect(() => {\n    const loadGraphCollections = async () => {\n      try {\n        const response = await fetchCollections(true); // filter_graphs=true\n        const edgeCollections = response.collections.filter(c => c.type === 'edge');\n        setGraphCollections(edgeCollections);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load graph collections');\n        console.error('Error loading graph collections:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadGraphCollections();\n  }, []);\n  const handleDataViewSelect = async value => {\n    setSelectedDataView(value);\n    let filterGraphs;\n    switch (value) {\n      case 'true':\n        filterGraphs = true;\n        break;\n      case 'false':\n        filterGraphs = false;\n        break;\n      case 'all':\n        filterGraphs = null;\n        break;\n      default:\n        filterGraphs = null;\n    }\n    onDataViewSelect === null || onDataViewSelect === void 0 ? void 0 : onDataViewSelect(filterGraphs);\n  };\n  const handleGraphSelect = graphName => {\n    setSelectedCollection(graphName);\n    onCollectionSelect === null || onCollectionSelect === void 0 ? void 0 : onCollectionSelect(graphName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Collections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sidebar-dropdown\",\n        value: selectedDataView,\n        onChange: e => handleDataViewSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select view...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), dataViewOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Network Graphs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading graphs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sidebar-dropdown\",\n        value: selectedCollection,\n        onChange: e => handleGraphSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a graph...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), graphCollections.map(collection => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: collection.name,\n          children: [collection.name.replace(/_/g, ' '), \" (\", collection.count, \" edges)\"]\n        }, collection.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"J1nqywQTVOvzv4F4qr/dFBy348Y=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","fetchCollections","jsxDEV","_jsxDEV","Sidebar","onCollectionSelect","onDataViewSelect","_s","graphCollections","setGraphCollections","selectedCollection","setSelectedCollection","selectedDataView","setSelectedDataView","isLoading","setIsLoading","error","setError","dataViewOptions","value","label","loadGraphCollections","response","edgeCollections","collections","filter","c","type","err","console","handleDataViewSelect","filterGraphs","handleGraphSelect","graphName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","option","collection","name","replace","count","_c","$RefreshReg$"],"sources":["/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Sidebar.css';\nimport { fetchCollections } from '../services/api';\n\nconst Sidebar = ({ onCollectionSelect, onDataViewSelect }) => {\n  const [graphCollections, setGraphCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  const [selectedDataView, setSelectedDataView] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const dataViewOptions = [\n    { value: 'all', label: 'All Data Collections' },\n    { value: 'true', label: 'Graph Collections' },\n    { value: 'false', label: 'Non-Graph Collections' }\n  ];\n\n  // Fetch graph collections when component mounts\n  useEffect(() => {\n    const loadGraphCollections = async () => {\n      try {\n        const response = await fetchCollections(true); // filter_graphs=true\n        const edgeCollections = response.collections.filter(c => c.type === 'edge');\n        setGraphCollections(edgeCollections);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load graph collections');\n        console.error('Error loading graph collections:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadGraphCollections();\n  }, []);\n\n  const handleDataViewSelect = async (value) => {\n    setSelectedDataView(value);\n    let filterGraphs;\n    \n    switch(value) {\n      case 'true':\n        filterGraphs = true;\n        break;\n      case 'false':\n        filterGraphs = false;\n        break;\n      case 'all':\n        filterGraphs = null;\n        break;\n      default:\n        filterGraphs = null;\n    }\n    \n    onDataViewSelect?.(filterGraphs);\n  };\n\n  const handleGraphSelect = (graphName) => {\n    setSelectedCollection(graphName);\n    onCollectionSelect?.(graphName);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-section\">\n        <h3>Data Collections</h3>\n        <select \n          className=\"sidebar-dropdown\"\n          value={selectedDataView}\n          onChange={(e) => handleDataViewSelect(e.target.value)}\n        >\n          <option value=\"\">Select view...</option>\n          {dataViewOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"sidebar-section\">\n        <h3>Network Graphs</h3>\n        {isLoading ? (\n          <p>Loading graphs...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : (\n          <select \n            className=\"sidebar-dropdown\"\n            value={selectedCollection}\n            onChange={(e) => handleGraphSelect(e.target.value)}\n          >\n            <option value=\"\">Select a graph...</option>\n            {graphCollections.map((collection) => (\n              <option key={collection.name} value={collection.name}>\n                {collection.name.replace(/_/g, ' ')} ({collection.count} edges)\n              </option>\n            ))}\n          </select>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}