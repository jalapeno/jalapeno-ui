{"ast":null,"code":"var _jsxFileName = \"/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Sidebar.css';\nimport { fetchCollections, fetchCollectionInfo } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onCollectionSelect\n}) => {\n  _s();\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadCollections = async () => {\n      try {\n        setIsLoading(true);\n        const collectionsData = await fetchCollections(true);\n        setCollections(collectionsData);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load collections');\n        console.error('Error loading collections:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadCollections();\n  }, []);\n  const handleCollectionSelect = async collectionName => {\n    if (collectionName) {\n      setSelectedCollection(collectionName);\n      onCollectionSelect === null || onCollectionSelect === void 0 ? void 0 : onCollectionSelect(collectionName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sidebar-dropdown\",\n        value: selectedCollection,\n        onChange: e => handleCollectionSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a collection...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), collections.map((collection, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: collection,\n          children: collection\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"XK5aI99BopDEjonOWTZ7ZDFwRaU=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","fetchCollections","fetchCollectionInfo","jsxDEV","_jsxDEV","Sidebar","onCollectionSelect","_s","collections","setCollections","selectedCollection","setSelectedCollection","isLoading","setIsLoading","error","setError","loadCollections","collectionsData","err","console","handleCollectionSelect","collectionName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","collection","index","_c","$RefreshReg$"],"sources":["/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Sidebar.css';\nimport { fetchCollections, fetchCollectionInfo } from '../services/api';\n\nconst Sidebar = ({ onCollectionSelect }) => {\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadCollections = async () => {\n      try {\n        setIsLoading(true);\n        const collectionsData = await fetchCollections(true);\n        setCollections(collectionsData);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load collections');\n        console.error('Error loading collections:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadCollections();\n  }, []);\n\n  const handleCollectionSelect = async (collectionName) => {\n    if (collectionName) {\n      setSelectedCollection(collectionName);\n      onCollectionSelect?.(collectionName);\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-section\">\n        <h3>Select Collection</h3>\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : (\n          <select \n            className=\"sidebar-dropdown\"\n            value={selectedCollection}\n            onChange={(e) => handleCollectionSelect(e.target.value)}\n          >\n            <option value=\"\">Select a collection...</option>\n            {collections.map((collection, index) => (\n              <option key={index} value={collection}>{collection}</option>\n            ))}\n          </select>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}