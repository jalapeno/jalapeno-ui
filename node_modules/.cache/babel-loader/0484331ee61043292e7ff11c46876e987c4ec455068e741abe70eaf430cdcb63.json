{"ast":null,"code":"var _jsxFileName = \"/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/NetworkGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport cytoscape from 'cytoscape';\nimport cola from 'cytoscape-cola';\n\n// Register the cola layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncytoscape.use(cola);\nconst NetworkGraph = () => {\n  _s();\n  const cyRef = useRef(null);\n  const elements = {\n    nodes: [{\n      data: {\n        id: '1',\n        label: 'Node 1'\n      }\n    }, {\n      data: {\n        id: '2',\n        label: 'Node 2'\n      }\n    }, {\n      data: {\n        id: '3',\n        label: 'Node 3'\n      }\n    }],\n    edges: [{\n      data: {\n        source: '1',\n        target: '2'\n      }\n    }, {\n      data: {\n        source: '2',\n        target: '3'\n      }\n    }]\n  };\n  const layout = {\n    name: 'cola',\n    animate: true,\n    refresh: 1,\n    maxSimulationTime: 3000\n  };\n  const stylesheet = [{\n    selector: 'node',\n    style: {\n      'background-color': '#666',\n      'label': 'data(label)',\n      'width': 30,\n      'height': 30\n    }\n  }, {\n    selector: 'edge',\n    style: {\n      'width': 2,\n      'line-color': '#ccc',\n      'curve-style': 'bezier'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(CytoscapeComponent, {\n    elements: elements,\n    cy: cy => {\n      cyRef.current = cy;\n    },\n    layout: layout,\n    stylesheet: stylesheet,\n    style: {\n      width: '100%',\n      height: '600px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkGraph, \"L4w3HyX14MEp5ZaZUA+eZGpvPlk=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useEffect","useRef","CytoscapeComponent","cytoscape","cola","jsxDEV","_jsxDEV","use","NetworkGraph","_s","cyRef","elements","nodes","data","id","label","edges","source","target","layout","name","animate","refresh","maxSimulationTime","stylesheet","selector","style","cy","current","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brucemcdougall/go/jalapeno-github/jalapeno-ui/src/components/NetworkGraph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport cytoscape from 'cytoscape';\nimport cola from 'cytoscape-cola';\n\n// Register the cola layout\ncytoscape.use(cola);\n\nconst NetworkGraph = () => {\n  const cyRef = useRef(null);\n\n  const elements = {\n    nodes: [\n      { data: { id: '1', label: 'Node 1' } },\n      { data: { id: '2', label: 'Node 2' } },\n      { data: { id: '3', label: 'Node 3' } }\n    ],\n    edges: [\n      { data: { source: '1', target: '2' } },\n      { data: { source: '2', target: '3' } }\n    ]\n  };\n\n  const layout = {\n    name: 'cola',\n    animate: true,\n    refresh: 1,\n    maxSimulationTime: 3000\n  };\n\n  const stylesheet = [\n    {\n      selector: 'node',\n      style: {\n        'background-color': '#666',\n        'label': 'data(label)',\n        'width': 30,\n        'height': 30\n      }\n    },\n    {\n      selector: 'edge',\n      style: {\n        'width': 2,\n        'line-color': '#ccc',\n        'curve-style': 'bezier'\n      }\n    }\n  ];\n\n  return (\n    <CytoscapeComponent\n      elements={elements}\n      cy={(cy) => { cyRef.current = cy; }}\n      layout={layout}\n      stylesheet={stylesheet}\n      style={{ width: '100%', height: '600px' }}\n    />\n  );\n};\n\nexport default NetworkGraph; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,kBAAkB,MAAM,mBAAmB;AAClD,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,IAAI,MAAM,gBAAgB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,SAAS,CAACI,GAAG,CAACH,IAAI,CAAC;AAEnB,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,KAAK,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMU,QAAQ,GAAG;IACfC,KAAK,EAAE,CACL;MAAEC,IAAI,EAAE;QAAEC,EAAE,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAS;IAAE,CAAC,EACtC;MAAEF,IAAI,EAAE;QAAEC,EAAE,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAS;IAAE,CAAC,EACtC;MAAEF,IAAI,EAAE;QAAEC,EAAE,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAS;IAAE,CAAC,CACvC;IACDC,KAAK,EAAE,CACL;MAAEH,IAAI,EAAE;QAAEI,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAC,EACtC;MAAEL,IAAI,EAAE;QAAEI,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAC;EAE1C,CAAC;EAED,MAAMC,MAAM,GAAG;IACbC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,CAAC;IACVC,iBAAiB,EAAE;EACrB,CAAC;EAED,MAAMC,UAAU,GAAG,CACjB;IACEC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE;MACL,kBAAkB,EAAE,MAAM;MAC1B,OAAO,EAAE,aAAa;MACtB,OAAO,EAAE,EAAE;MACX,QAAQ,EAAE;IACZ;EACF,CAAC,EACD;IACED,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE;MACL,OAAO,EAAE,CAAC;MACV,YAAY,EAAE,MAAM;MACpB,aAAa,EAAE;IACjB;EACF,CAAC,CACF;EAED,oBACEpB,OAAA,CAACJ,kBAAkB;IACjBS,QAAQ,EAAEA,QAAS;IACnBgB,EAAE,EAAGA,EAAE,IAAK;MAAEjB,KAAK,CAACkB,OAAO,GAAGD,EAAE;IAAE,CAAE;IACpCR,MAAM,EAAEA,MAAO;IACfK,UAAU,EAAEA,UAAW;IACvBE,KAAK,EAAE;MAAEG,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEN,CAAC;AAACzB,EAAA,CAnDID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAqDlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}